import { PropType, CSSProperties } from 'vue';
declare const _default: import("vue").DefineComponent<{
    /** Type your toast position, default: top-right */
    position: {
        type: PropType<"top-left" | "top-right" | "bottom-left" | "bottom-right" | "top-center" | "bottom-center">;
        default: string;
    };
    toastStyle: {
        type: PropType<CSSProperties>;
        default: () => {};
    };
    className: {
        type: StringConstructor;
    };
    toastClassName: {
        type: StringConstructor;
    };
    enterFromClass: {
        type: StringConstructor;
    };
    enterActiveClass: {
        type: StringConstructor;
    };
    leaveActiveClass: {
        type: StringConstructor;
    };
    leaveToClass: {
        type: StringConstructor;
    };
    variant: {
        type: PropType<"default" | "color" | "outline">;
        default: string;
    };
    showProgressBar: {
        type: BooleanConstructor;
        default: boolean;
    };
    duration: {
        type: NumberConstructor;
        default: undefined;
    };
    theme: {
        type: PropType<"light" | "dark" | "system">;
        default: string;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    /** Type your toast position, default: top-right */
    position: {
        type: PropType<"top-left" | "top-right" | "bottom-left" | "bottom-right" | "top-center" | "bottom-center">;
        default: string;
    };
    toastStyle: {
        type: PropType<CSSProperties>;
        default: () => {};
    };
    className: {
        type: StringConstructor;
    };
    toastClassName: {
        type: StringConstructor;
    };
    enterFromClass: {
        type: StringConstructor;
    };
    enterActiveClass: {
        type: StringConstructor;
    };
    leaveActiveClass: {
        type: StringConstructor;
    };
    leaveToClass: {
        type: StringConstructor;
    };
    variant: {
        type: PropType<"default" | "color" | "outline">;
        default: string;
    };
    showProgressBar: {
        type: BooleanConstructor;
        default: boolean;
    };
    duration: {
        type: NumberConstructor;
        default: undefined;
    };
    theme: {
        type: PropType<"light" | "dark" | "system">;
        default: string;
    };
}>>, {
    duration: number;
    variant: "default" | "color" | "outline";
    showProgressBar: boolean;
    position: "top-left" | "top-right" | "bottom-left" | "bottom-right" | "top-center" | "bottom-center";
    theme: "light" | "dark" | "system";
    toastStyle: CSSProperties;
}, {}>;
export default _default;
