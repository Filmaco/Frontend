import { PropType } from "vue";
import { TPositions, TToastTypes, TVariants } from "../core/types";
declare const _default: import("vue").DefineComponent<{
    id: {
        type: StringConstructor;
        required: true;
    };
    type: {
        type: PropType<TToastTypes>;
        required: true;
        default: string;
    };
    title: {
        type: StringConstructor;
    };
    message: {
        type: StringConstructor;
        required: true;
    };
    icon: {
        type: StringConstructor;
    };
    dismissible: {
        type: BooleanConstructor;
        default: boolean;
    };
    duration: {
        type: NumberConstructor;
        default: number;
    };
    className: {
        type: StringConstructor;
    };
    position: {
        type: PropType<TPositions>;
        default: string;
    };
    visible: {
        type: BooleanConstructor;
    };
    onDismiss: {
        type: FunctionConstructor;
    };
    style: {
        type: ObjectConstructor;
    };
    variant: {
        type: PropType<TVariants>;
        default: string;
    };
    showProgressBar: {
        type: BooleanConstructor;
        default: boolean;
    };
    theme: {
        type: PropType<"light" | "dark" | "system">;
        default: string;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {
    remove: (...args: any[]) => void;
}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    id: {
        type: StringConstructor;
        required: true;
    };
    type: {
        type: PropType<TToastTypes>;
        required: true;
        default: string;
    };
    title: {
        type: StringConstructor;
    };
    message: {
        type: StringConstructor;
        required: true;
    };
    icon: {
        type: StringConstructor;
    };
    dismissible: {
        type: BooleanConstructor;
        default: boolean;
    };
    duration: {
        type: NumberConstructor;
        default: number;
    };
    className: {
        type: StringConstructor;
    };
    position: {
        type: PropType<TPositions>;
        default: string;
    };
    visible: {
        type: BooleanConstructor;
    };
    onDismiss: {
        type: FunctionConstructor;
    };
    style: {
        type: ObjectConstructor;
    };
    variant: {
        type: PropType<TVariants>;
        default: string;
    };
    showProgressBar: {
        type: BooleanConstructor;
        default: boolean;
    };
    theme: {
        type: PropType<"light" | "dark" | "system">;
        default: string;
    };
}>> & {
    onRemove?: ((...args: any[]) => any) | undefined;
}, {
    type: TToastTypes;
    duration: number;
    dismissible: boolean;
    variant: TVariants;
    showProgressBar: boolean;
    position: TPositions;
    visible: boolean;
    theme: "light" | "dark" | "system";
}, {}>;
export default _default;
